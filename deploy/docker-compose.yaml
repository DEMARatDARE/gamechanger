version: '3.5'

services:
  web:
    build:
      context: "./deploy/src/gamechanger-web/"
      dockerfile: "./Dockerfile.prod"
      args:
        APP_UID: 1000
        APP_GID: 1000
        NPM_AUTH_TOKEN: "${NPM_AUTH_TOKEN}"
    user: "1000:1000"
    image: "gc-web:latest"
    ports:
      - "8990:8990"
      - "8443:8443"
    networks:
      - app-net

  data-pipelines:
    build:
      context: "./deploy/src/gamechanger-data/"
      dockerfile: "./dev_tools/docker/k8s/rhel8.Dockerfile"
    user: root
    entrypoint:
      - "true"
    command: []
    image: "gc-data-pipelines:latest"
    networks:
      - app-net

  gamechanger-ml:
    build:
      context: "./deploy/src/gamechanger-ml/"
      dockerfile: "./gamechangerml/api/fastapi/rhel8.mlapp.Dockerfile"
      args:
        APP_UID: 1001
        APP_GID: 1001
    user: "1001:1001"
    environment:
      ENV_TYPE: DEVLOCAL
      DOWNLOAD_DEP: "false"
    ports:
      - "5000:5000"
    image: "gc-data-pipelines:latest"
    networks:
      - app-net

  redis:
    image: redis:5.0.14
    user: redis
    ports:
      - "6379:6379"
    volumes:
      - "redis-etc:/usr/local/etc"
      - "redis-data:/data"
    networks:
      - app-net

  neo4j:
    build: 
      context: "./deploy/src/gamechanger-neo4j-plugin/"
      dockerfile: "./docker/debian.Dockerfile"
    container_name: "${COMPOSE_PROJECT_NAME:-gc}-neo4j"
    environment:
      NEO4J_AUTH: "neo4j/password"
    image: "gc-neo4j:latest"
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - "neo4j-data:/neo4j/data"
    networks:
      - app-net

  elasticsearch:
    container_name: "${COMPOSE_PROJECT_NAME:-gc}-elasticsearch"
    image: elasticsearch:7.10.1
    user: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - "es-data:/usr/share/elasticsearch/data"
    environment:
      - "discovery.type=single-node"
    networks:
      - app-net

  kibana:
    container_name: "${COMPOSE_PROJECT_NAME:-gc}-kibana"
    image: kibana:7.10.1
    user: kibana
    ports:
      - 5601:5601
    networks:
      - app-net

  s3-server:
    container_name: "${COMPOSE_PROJECT_NAME:-gc}-s3-server"
    image: "minio/minio:RELEASE.2021-10-23T03-28-24Z"
    user: root
    ports:
      - "9000:9000"
    volumes:
      - "s3-data:/s3-data"
    environment: 
      - "MINIO_ACCESS_KEY=dev-access-key"
      - "MINIO_SECRET_KEY=dev-secret-key"
      - "MINIO_REGION_NAME=us-east-1"
    command:
      - server
      - /s3-data
    networks:
      - app-net

  postgres:
    container_name: "${COMPOSE_PROJECT_NAME:-gc}-postgres"
    image: "postgres:13.4-alpine"
    user: postgres
    ports:
      - "5432:5432"
    volumes:
      - "pg-data:/pg-data"
    environment: 
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_DB=postgres"
      - "PGDATA=/pg-data"
    networks:
      - app-net

volumes:
  s3-data:
  pg-data:
  neo4j-data:
  es-data:
  redis-data:
  redis-etc:

networks:
  app-net:
    name: "${COMPOSE_PROJECT_NAME:-gc}-network"
